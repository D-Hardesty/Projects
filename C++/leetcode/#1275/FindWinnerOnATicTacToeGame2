class Solution {
public:
    string tictactoe(vector<vector<int>>& moves) {
        int size = moves.size();
        if (size < 5) return "Pending";
        vector<vector<int>> game = {{0,0,0}, {0,0,0}, {0,0,0}};
        for (int i = 0; i < moves.size(); ++i) {
            // player A
            if (i % 2 == 0) {
                game[moves[i][0]][moves[i][1]] = 1;
            } 
            // player B
            else {
                game[moves[i][0]][moves[i][1]] = -1;
            }

            // check A
            // row
            if (game[0][0] + game[0][1] + game[0][2] == 3) return "A";
            if (game[1][0] + game[1][1] + game[1][2] == 3) return "A";
            if (game[2][0] + game[2][1] + game[2][2] == 3) return "A";
            // col
            if (game[0][0] + game[1][0] + game[2][0] == 3) return "A";
            if (game[0][1] + game[1][1] + game[2][1] == 3) return "A";
            if (game[0][2] + game[1][2] + game[2][2] == 3) return "A";
            // diag
            if (game[0][0] + game[1][1] + game[2][2] == 3) return "A";
            if (game[0][2] + game[1][1] + game[2][0] == 3) return "A";

            // check B
            // row
            if (game[0][0] + game[0][1] + game[0][2] == -3) return "B";
            if (game[1][0] + game[1][1] + game[1][2] == -3) return "B";
            if (game[2][0] + game[2][1] + game[2][2] == -3) return "B";
            // col
            if (game[0][0] + game[1][0] + game[2][0] == -3) return "B";
            if (game[0][1] + game[1][1] + game[2][1] == -3) return "B";
            if (game[0][2] + game[1][2] + game[2][2] == -3) return "B";
            // diag
            if (game[0][0] + game[1][1] + game[2][2] == -3) return "B";
            if (game[0][2] + game[1][1] + game[2][0] == -3) return "B";
        }
        if (size < 9) return "Pending";
        return "Draw";    
    }
};
