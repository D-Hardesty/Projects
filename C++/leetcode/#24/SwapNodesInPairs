/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool valid = true;
    ListNode* swapPairs(ListNode* head) {
        if (head == nullptr || head->next == nullptr) return head;
        ListNode* first = head;
        head = head->next; 
        ListNode* second = head;
        ListNode* temp = head;
        while (valid) {
            // check if two valid nodes come next
            temp = (temp->next && temp->next->next) ? temp->next : (valid = false, second);
            first->next = temp->next;
            second->next = first;
            first = temp;
            temp = temp->next;
            second = temp;
        }   
        return head;
    }
};
